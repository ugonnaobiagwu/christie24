[CODE QUALITY]
Author of the code review: 
UGONNA OBIAGWU

Date of the code review
November 30th, 2023. (I know it's a tad late we've been quite busy)

Sprint Number
5

Name of the .cs file(s) being reviewed
sprint0/Link/Link.cs

Author of the .cs file being reviewed
Ryan Greene

Specific comments on code quality
* Primarily looking at the Damage Logic since that's what new here.
* The Update is a little magical (which we're both already well aware of) with the usage of magic numbers.
* I question the need for svaing the Current Tunic into another Variable as that can create a cohernecy issue. 

A hypothetical change to make to the game related to the file being reviewed and how the current implementation could or could not easily support that change
* I'd possibly break some of the update down into different methods, remove the commented code and maybe data drive the direction methods.

[READABILITY]
Author of the code review: 
UGONNA OBIAGWU

Date of the code review
November 30th, 2023.

Sprint number
5

Name of the .cs file(s) being reviewed
sprint0/LevelLoading/LevelLoader.cs

Author of the .cs file being reviewed
Ryan Greene

Number of minutes taken to complete the review
5

Specific comments on what is readable and what is not
* As for the class on it's own it's can be a little hard to follow without the context or direction of what some of these symbol names are given that this a few levels deep in the Level Loading procedures.
* It may benefit from an overhead comment for non-LL experienced folk
* From the perspectice of one who understands this stage of the game, the parsers make sense and don't overcomplicate or inflate the work they're tasked with.
